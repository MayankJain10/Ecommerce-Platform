package com.mayank.ecommerce.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.AccessDeniedException;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.mayank.ecommerce.config.JwtUtil;
import com.mayank.ecommerce.repository.OrderRepository;

@RestController
@RequestMapping("/api/invoice")
public class InvoiceController {
	
	@Autowired
	private JwtUtil jwtUtil;
	
	@Autowired
	private OrderRepository orderRepository;
	
	
	@GetMapping("/invoice/{id}")
	public ResponseEntity<byte[]> getInvoice(@PathVariable Long id,
	                                         @RequestHeader("Authorization") String authHeader) {
	    String email = jwtUtil.extractUsername(authHeader.substring(7));
	    Order order = orderRepository.findById(id)
	        .orElseThrow(() -> new RuntimeException("Order not found"));

	    if (!order.getUser().getEmail().equals(email)) {
	        throw new AccessDeniedException("Unauthorized access");
	    }

	    if (order.isCancelled()) {
	        throw new IllegalStateException("Invoice not available for cancelled order");
	    }

	    // proceed to generate invoice
	}


}
